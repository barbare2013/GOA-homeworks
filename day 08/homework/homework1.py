
# პრაქტიკა:
# 1)შეასწორეთ კოდში შეცდომები:
# is_student = False
# print(is_student == True)

# is_super_gela = True
# print(is_super_gela != False)

# print(bool(0))
# 

# 2)ვეფხვისტყაოსნიდან 1 აბზაცი გადაიყვანეთ binary ში
#  11100001 10000011 10100000 11100001 10000011 10011101 11100001 10000011
#  10011011 11100001 10000011 10010100 11100001 10000011 10011010 11100001
#  10000011 10011011 11100001 10000011 10010000 11100001 10000011 10011100
#  00100000 11100001 10000011 10101000 11100001 10000011 10010100 11100001
#  10000011 10100101 11100001 10000011 10011011 11100001 10000011 10011100
#  11100001 10000011 10010000 00100000 11100001 10000011 10100001 11100001
#  10000011 10010000 11100001 10000011 10011011 11100001 10000011 10100111
#  11100001 10000011 10010000 11100001 10000011 10100000 11100001 10000011
#  10011101 00100000 11100001 10000011 10101011 11100001 10000011 10010000
#  11100001 10000011 10011010 11100001 10000011 10011000 11100001 10000011
#  10010111 11100001 10000011 10010000 00100000 11100001 10000011 10011011
#  11100001 10000011 10011000 11100001 10000011 10010111 00100000 11100001
#  10000011 10101011 11100001 10000011 10011010 11100001 10000011 10011000
#  11100001 10000011 10010100 11100001 10000011 10100000 11100001 10000011
#  10011000 11100001 10000011 10010111 11100001 10000011 10010000 00101100
#  00001010 11100001 10000011 10010110 11100001 10000011 10010100 11100001
#  10000011 10010010 11100001 10000011 10010000 11100001 10000011 10100000
#  11100001 10000011 10010011 11100001 10000011 10011011 11100001 10000011
#  10011101 11100001 10000011 10010111 00100000 11100001 10000011 10010000
#  11100001 10000011 10100000 11100001 10000011 10100001 11100001 10000011
#  10011100 11100001 10000011 10011000 00100000 11100001 10000011 10100001
#  11100001 10000011 10100011 11100001 10000011 10011010 11100001 10000011
#  10011000 11100001 10000011 10010111 11100001 10000011 10010000 00100000
#  11100001 10000011 10100111 11100001 10000011 10010101 11100001 10000011
#  10011100 11100001 10000011 10010000 00100000 11100001 10000011 11100001
#  10000011 10010100 11100001 10000011 10101010 11100001 10000011 10011000
#  11100001 10000011 10010111 00100000 11100001 10000011 10011011 11100001
#  10000011 10011101 11100001 10000011 10011100 11100001 10000011 10010000
#  11100001 10000011 10010001 11100001 10000011 10010100 11100001 10000011
#  10100000 11100001 10000011 10011000 11100001 10000011 10010111 11100001
#  10000011 10010000 00101100 00001010 11100001 10000011 10101001 11100001
#  10000011 10010101 11100001 10000011 10010100 11100001 10000011 10011100
#  00101100 00100000 11100001 10000011 10011001 11100001 10000011 10010000
#  11100001 10000011 10101010 11100001 10000011 10010111 11100001 10000011
#  10010000 00101100 00100000 11100001 10000011 10011011 11100001 10000011
#  10011101 11100001 10000011 10010010 11100001 10000011 10010101 11100001
#  10000011 10101010 11100001 10000011 10010000 00100000 11100001 10000011
#  10100101 11100001 10000011 10010101 11100001 10000011 10010100 11100001
#  10000011 10100111 11100001 10000011 10010000 11100001 10000011 10011100
#  11100001 10000011 10010000 00101100 00100000 11100001 10000011 10010010
#  11100001 10000011 10010101 11100001 10000011 10010000 11100001 10000011
#  10100101 11100001 10000011 10010101 11100001 10000011 10100001 00100000
#  11100001 10000011 10100011 11100001 10000011 10010111 11100001 10000011
#  10010101 11100001 10000011 10010000 11100001 10000011 10011010 11100001
#  10000011 10010000 11100001 10000011 10010101 11100001 10000011 10011000
#  00100000 11100001 10000011 10100100 11100001 10000011 10010100 11100001
#  10000011 10100000 11100001 10000011 10011000 11100001 10000011 10010111
#  11100001 10000011 10010000 00101100 00001010 11100001 10000011 10011011
#  11100001 10000011 10011000 11100001 10000011 10100001 11100001 10000011
#  10010010 11100001 10000011 10010000 11100001 10000011 10011100 00100000
#  11100001 10000011 10010000 11100001 10000011 10100000 11100001 10000011
#  10100001 00100000 11100001 10000011 10100111 11100001 10000011 10011101
#  11100001 10000011 10010101 11100001 10000011 10011010 11100001 10000011
#  10011000 00100000 11100001 10000011 10101110 11100001 10000011 10010100
#  11100001 10000011 10011010 11100001 10000011 10011011 11100001 10000011
#  10101100 11100001 10000011 10011000 11100001 10000011 10100100 11100001
#  10000011 10010100 00100000 11100001 10000011 10100001 11100001 10000011 
#  10010000 11100001 10000011 10101110 11100001 10000011 10011000 11100001
#  10000011 10010111 11100001 10000011 10010000 00100000 11100001 10000011
#  10011011 11100001 10000011 10011000 11100001 10000011 10100001 00100000
#  11100001 10000011 10011011 11100001 10000011 10011000 11100001 10000011
#  10010100 11100001 10000011 10100000 11100001 10000011 10011000 11100001
#  10000011 10010111 11100001 10000011 10010000

# 3)მომხარებელს შემოატანინეთ რამე რიცხვი, შემდეგ შედარების ოპერატორებით შეამოწმეთ არის თუ არა ეს რიცხვი მეტი 18 ზე
number=int(input('enter your number'))
print(number>18)

# 4)მომხარებელს შემოატანინეთ სახელი, შემდეგ შედარების ოპერატორებით შეამოწმეთ არის თუ არა ეს სახელი "Aleksandre" ს
name=str(input('enter your name'))
print(name=='Aleksandre')

# 5)sololearn Comparison Operations მდე
# შევასრულე.